#include<iostream>
#include<SFML/Graphics.hpp>

using namespace std;
using namespace sf;

bool win = false;
bool collision = true;

bool Level3 = false;
bool Level2 = false;
bool Level1 = true;


int main() {
	RenderWindow window(VideoMode(600, 500), "Mazeee");
	window.setMouseCursorVisible(false);

	sf::Font font;
	if (!font.loadFromFile("timesnewarial.ttf")) {
		return EXIT_FAILURE;
	}

	Text header; 
	header.setFont(font);
	header.setCharacterSize(72);
	header.setString("Maze");
	header.setPosition(170, 50);

	Text play;
	play.setFont(font);
	play.setCharacterSize(36);
	play.setString("Play");
	play.setPosition(270, 367);

	RectangleShape button(Vector2f(110, 50));
	button.setFillColor(Color::Green);
	button.setPosition(245, 370);

	//Level 1
	Text lvl1;
	lvl1.setFont(font);
	lvl1.setCharacterSize(24);
	lvl1.setString("Level 1");
	lvl1.setPosition(480, 85);

	RectangleShape rectangle1(Vector2f(150, 400));
	rectangle1.setFillColor(Color::Cyan);
	rectangle1.setPosition(225, 50);


	RectangleShape rectangle2(Vector2f(110, 30));
	rectangle2.setFillColor(Color::Cyan);
	rectangle2.setPosition(375, 50);


	RectangleShape finish1(Vector2f(40, 30));
	finish1.setFillColor(Color::Red);
	finish1.setPosition(485, 50);
	//level 1


	//Level 2

	RectangleShape rectangle3(Vector2f(480, 30));
	rectangle3.setFillColor(Color::Cyan);
	rectangle3.setPosition(40, 80);

	RectangleShape rectangle4(Vector2f(30, 40));
	rectangle4.setFillColor(Color::Cyan);
	rectangle4.setPosition(40, 80);

	RectangleShape rectangle5(Vector2f(480, 30));
	rectangle5.setFillColor(Color::Cyan);
	rectangle5.setPosition(40, 120);

	RectangleShape rectangle6(Vector2f(30, 40));
	rectangle6.setFillColor(Color::Cyan);
	rectangle6.setPosition(490, 150);

	RectangleShape rectangle7(Vector2f(480, 30));
	rectangle7.setFillColor(Color::Cyan);
	rectangle7.setPosition(40, 190);

	RectangleShape rectangle8(Vector2f(30, 40));
	rectangle8.setFillColor(Color::Cyan);
	rectangle8.setPosition(40, 220);

	RectangleShape rectangle9(Vector2f(420, 30));
	rectangle9.setFillColor(Color::Cyan);
	rectangle9.setPosition(40, 260);

	RectangleShape rectangle10(Vector2f(60, 180));
	rectangle10.setFillColor(Color::Cyan);
	rectangle10.setPosition(460, 260);

	RectangleShape rectangle11(Vector2f(440, 20));
	rectangle11.setFillColor(Color::Cyan);
	rectangle11.setPosition(80, 440);

	RectangleShape finish2(Vector2f(40, 20));
	finish2.setFillColor(Color::Red);
	finish2.setPosition(40, 440);

	Text lvl2;
	lvl2.setFont(font);
	lvl2.setCharacterSize(24);
	lvl2.setString("Level 2");
	lvl2.setPosition(40, 470);
	//Level2 

	//Level 3 
	RectangleShape rectangle12(Vector2f(480, 20));
	rectangle12.setFillColor(Color::Cyan);
	rectangle12.setPosition(40, 440);

	RectangleShape rectangle13(Vector2f(20, 70));
	rectangle13.setFillColor(Color::Cyan);
	rectangle13.setPosition(520, 400);

	RectangleShape rectangle14(Vector2f(460, 30));
	rectangle14.setFillColor(Color::Cyan);
	rectangle14.setPosition(80, 370);

	RectangleShape rectangle15(Vector2f(40, 180));
	rectangle15.setFillColor(Color::Cyan);
	rectangle15.setPosition(40, 220);

	RectangleShape rectangle16(Vector2f(280, 30));
	rectangle16.setFillColor(Color::Cyan);
	rectangle16.setPosition(40, 190);

	RectangleShape rectangle17(Vector2f(20, 12));
	rectangle17.setFillColor(Color::Cyan);
	rectangle17.setPosition(320, 190);

	RectangleShape rectangle18(Vector2f(12, 50));
	rectangle18.setFillColor(Color::Cyan);
	rectangle18.setPosition(340, 152);

	RectangleShape rectangle19(Vector2f(40, 12));
	rectangle19.setFillColor(Color::Cyan);
	rectangle19.setPosition(312, 110);

	RectangleShape rectangle20(Vector2f(12, 30));
	rectangle20.setFillColor(Color::Cyan);
	rectangle20.setPosition(312, 110);

	RectangleShape rectangle21(Vector2f(28, 12));
	rectangle21.setFillColor(Color::Cyan);
	rectangle21.setPosition(324, 110);

	RectangleShape rectangle22(Vector2f(12, 30));
	rectangle22.setFillColor(Color::Cyan);
	rectangle22.setPosition(340, 80);

	RectangleShape finish3(Vector2f(36, 60));
	finish3.setFillColor(Color::Red);
	finish3.setPosition(328, 20);

	Text lvl3;
	lvl3.setFont(font);
	lvl3.setCharacterSize(24);
	lvl3.setString("Level 3");
	lvl3.setPosition(380, 50);

	Text victory;
	victory.setFont(font);
	victory.setCharacterSize(120);
	victory.setFillColor(Color::Green);
	victory.setString("Victory");
	victory.setPosition(0, 10);

	//Level 3

	//RectangleShape player(Vector2f(10, 10));
	sf::Sprite player;
	sf::Texture mouse;
	mouse.loadFromFile("marshumaro.png");
	player.setTexture(mouse);
//	player.setFillColor(Color::Blue);

	while (window.isOpen()) {
		Event e;
		while (window.pollEvent(e)){ 
			if (e.type == Event::Closed) {
				window.close();
			}
		}


		Vector2i mousePos = Mouse::getPosition(window);
		player.setPosition((float)mousePos.x - 40, static_cast<float> (mousePos.y-32));
		//Collision

		if (!collision && Level1) {
			if (mousePos.x < 255) collision = true;
			else if (mousePos.y < 50) collision = true;
			else if (mousePos.y > 440) collision = true;
			else if (mousePos.x > 365 && mousePos.y > 70) collision = true;
			else if (mousePos.x > 485) { Level1 = false; Level2 = true; }

		}

		if (Level2) {
			if (mousePos.x <= 70 && mousePos.y > 400) { Level2 = false; Level3 = true; }
			else if (mousePos.y < 50) collision = true;
			else if (mousePos.y < 510) collision = true;
			else if (mousePos.y < 40) collision = true;
			else if (mousePos.y < 450) collision = true;
			else if (mousePos.y > 70 && mousePos.y < 120 && mousePos.x > 60) collision = true;
			else if (mousePos.y > 140 && mousePos.y < 190 && mousePos.x > 490) collision = true;
			else if (mousePos.y > 210 && mousePos.y < 260 && mousePos.x > 60) collision = true;
			else if (mousePos.y > 280 && mousePos.y < 440 && mousePos.x > 460) collision = true;
		}

		if (Level3) {
			if (mousePos.y <= 70) win = true;
			else if (mousePos.y > 460) collision = true;
			else if (mousePos.x > 40) collision = true;
			else if (mousePos.x > 530) collision = true;
			else if (mousePos.y < 440 && mousePos.y > 390 && mousePos.x < 520) collision = true;
			else if (mousePos.y < 370 && mousePos.y > 210 && mousePos.x > 70) collision = true;
			else if (mousePos.x > 342 && mousePos.y < 192) collision = true;
			else if (mousePos.x < 312 && mousePos.y < 142) collision = true;
			else if (mousePos.y < 190 && mousePos.x < 340 && mousePos.x > 142) collision = true;
			else if (mousePos.y < 140 && mousePos.y > 112 && mousePos.x > 314) collision = true;
			else if (mousePos.y < 110 && mousePos.x < 340) collision = true;
			else if (mousePos.y > 192 && mousePos.y < 220 && mousePos.x > 310) collision = true;

		}

		//Window 
		window.clear();
		if (!collision && Level1) {
			window.draw(lvl1);
			window.draw(rectangle1);
			window.draw(rectangle2);
			window.draw(finish1);
		}
		if (collision) {
			window.draw(header);
			window.draw(button);
			window.draw(play);
			if (Mouse::isButtonPressed(Mouse::Left) && mousePos.y > 369
				&& mousePos.y <= 410 && mousePos.x >= 245
				&& mousePos.x <= 345) {
				collision = false;
				Level1 = true;
				Level2 = false;
				Level3 = false;
				win = false;
			}
		}
		if (Level2 && !collision) {
			window.draw(rectangle3);
			window.draw(rectangle4);
			window.draw(rectangle5);
			window.draw(rectangle6);
			window.draw(rectangle7);
			window.draw(rectangle8);
			window.draw(rectangle9);
			window.draw(rectangle10);
			window.draw(rectangle11);
			window.draw(finish2);
			window.draw(lvl2);
		}
		if (Level3 && !collision) {
			window.draw(rectangle12);
			window.draw(rectangle13);
			window.draw(rectangle14);
			window.draw(rectangle15);
			window.draw(rectangle16);
			window.draw(rectangle17);
			window.draw(rectangle18);
			window.draw(rectangle19);
			window.draw(rectangle20);
			window.draw(rectangle21);
			window.draw(rectangle22);
			window.draw(finish3);
			window.draw(lvl3);

			if (win) {
				window.draw(victory);
				if (mousePos.y < 20) collision = true;
				else if (mousePos.x < 327) collision = true;
				else if (mousePos.x > 354) collision = true;
				else if (mousePos.y > 70) collision = true;
			}
		}
		window.draw(player);
		window.display();

	}
	return 0;
}
